function GameAssets.isCollision 3
push constant 0
pop local 2
push argument 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 3
sub
push constant 1
add
push argument 0
call GameAssets.getAddress 2
pop local 0
push argument 1
push argument 3
sub
push constant 1
add
push argument 0
push constant 14
add
call GameAssets.getAddress 2
pop local 1
label IF_FALSE0
push argument 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push constant 14
add
push argument 3
add
push argument 0
call GameAssets.getAddress 2
pop local 0
push argument 1
push constant 14
add
push argument 3
add
push argument 0
push constant 14
add
call GameAssets.getAddress 2
pop local 1
label IF_FALSE1
push argument 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push argument 0
push argument 3
sub
call GameAssets.getAddress 2
pop local 0
push argument 1
push constant 14
add
push argument 0
push argument 3
sub
call GameAssets.getAddress 2
pop local 1
label IF_FALSE2
push argument 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
push argument 0
push constant 14
add
push argument 3
add
call GameAssets.getAddress 2
pop local 0
push argument 1
push constant 14
add
push argument 0
push constant 14
add
push argument 3
add
call GameAssets.getAddress 2
pop local 1
label IF_FALSE3
push local 0
call Memory.peek 1
push constant 1
neg
eq
push local 1
call Memory.peek 1
push constant 1
neg
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 2
label IF_FALSE4
push local 2
return
function GameAssets.chooseLocation 4
push constant 0
pop local 2
push constant 2
call Array.new 1
pop local 3
label WHILE_EXP0
push local 2
not
not
if-goto WHILE_END0
push constant 9
push constant 30
call GameAssets.generateRandomRange 2
pop local 0
push constant 1
push constant 14
call GameAssets.generateRandomRange 2
pop local 1
push local 0
push constant 16
call Math.multiply 2
push local 1
push constant 16
call Math.multiply 2
call GameAssets.isValidLocation 2
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 3
add
push local 0
push constant 16
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 3
add
push local 1
push constant 16
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
return
function GameAssets.isValidLocation 1
push argument 1
push argument 0
call GameAssets.getAddress 2
pop local 0
push local 0
call Memory.peek 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function GameAssets.getAddress 0
push constant 16384
push constant 32
push argument 0
call Math.multiply 2
add
push argument 1
push constant 16
call Math.divide 2
add
return
function GameAssets.mod 1
push argument 0
push argument 1
gt
push argument 1
push constant 0
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 0
push argument 1
call Math.divide 2
call Math.multiply 2
sub
pop local 0
goto IF_END0
label IF_FALSE0
push argument 0
pop local 0
label IF_END0
push local 0
return
function GameAssets.initSeed 0
push argument 0
push constant 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop static 0
goto IF_END0
label IF_FALSE0
push argument 0
pop static 0
label IF_END0
push constant 32749
pop static 2
push constant 219
pop static 1
push static 2
push static 1
call Math.divide 2
pop static 3
push static 2
push static 1
call GameAssets.mod 2
pop static 4
push constant 0
return
function GameAssets.generateRandom 1
push static 1
push static 0
push static 3
call GameAssets.mod 2
call Math.multiply 2
push static 4
push static 0
push static 3
call Math.divide 2
call Math.multiply 2
sub
pop local 0
push local 0
pop static 0
push static 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 0
push static 2
add
pop static 0
label IF_FALSE0
push static 0
return
function GameAssets.generateRandomRange 2
push static 2
push argument 1
push argument 0
sub
push constant 1
add
call Math.divide 2
pop local 0
call GameAssets.generateRandom 0
push local 0
call Math.divide 2
push argument 0
add
pop local 1
label WHILE_EXP0
push local 1
push argument 1
gt
not
if-goto WHILE_END0
call GameAssets.generateRandom 0
push local 0
call Math.divide 2
push argument 0
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
return
