class MazeGame{
	field Hero hero;
	field int direction;

	constructor MazeGame new(){
		let hero = Hero.new();
		let direction = 0;
		return this;
	}

/** Moves the hero in the current direction. */
   method void moveHero() {
      if (direction = 1) { do hero.moveUp(); }
	  if (direction = 2) { do hero.moveDown(); }
	  if (direction = 3) { do hero.moveLeft(); }
	  if (direction = 4) { do hero.moveRight(); }
      do Sys.wait(20);  // delays the next movement
      return;
   }


	method void run(){
		var char key;
		var boolean exit;
		let exit = false;
 
		while (~exit) {
			// waits for a key to be pressed
			while (key = 0) {
				let key = Keyboard.keyPressed();
				let direction = 0;
			}
			let key = Keyboard.keyPressed();
			if (key = 81)  { let exit = true; }     // q key
			if (key = 131) { let direction = 1; }   // up arrow
			if (key = 133) { let direction = 2; }   // down arrow
			if (key = 130) { let direction = 3; }   // left arrow
			if (key = 132) { let direction = 4; }   // right arrow
			// waits for the key to be released
			/*
			while (~(key = 0)) {
				let key = Keyboard.keyPressed();
				do moveHero();
			}
			*/
			do moveHero();
			let key = Keyboard.keyPressed();
		} // while	
		return;
	}
}